name: Marketplace Automation

on:
  workflow_dispatch:
  push:

jobs:
  marketplace-automation:
    runs-on: ubuntu-latest
    environment: internal 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch the latest release
        id: fetch_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          release_url=$(echo $response | jq -r '.zipball_url')
          release_notes=$(echo $response | jq -r '.body')
          echo "LATEST_RELEASE_URL=$release_url" >> $GITHUB_OUTPUT
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$release_notes" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "Latest Release URL: $release_url"
          echo "Release Notes: $release_notes"

      - name: Download the latest release
        run: |
          curl -L ${{ steps.fetch_release.outputs.LATEST_RELEASE_URL }} -o source.zip
          unzip source.zip
          rm source.zip

      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          filename: 'processed_release.zip'
          exclusions: '*.git* *.DS_Store'

      - name: List files for verification
        run: |
          ls -la

      - name: Upload processed release as artifact
        uses: actions/upload-artifact@v4
        with:
          name: processed-release
          path: processed_release.zip
          
      - name: Prepare the request payload
        run: |
          touch file-payload && \
          echo "--UNIQUE_BOUNDARY_TOKEN" > file-payload && \
          echo 'Content-Disposition: form-data; name="file[]"; filename="processed-release.zip"' >> file-payload && \
          echo 'Content-Type: application/zip' >> file-payload && \
          echo '' >> file-payload && \
          cat processed_release.zip >> file-payload && \
          echo '' >> file-payload && \
          echo "--UNIQUE_BOUNDARY_TOKEN--" >> file-payload
        
      - name: Get session token
        id: get_session_token
        env:
          BASE_URL: ${{ secrets.ADOBE_EQP_API_URL }}
          ADOBE_CLIENT_ID: ${{ secrets.ADOBE_CLIENT_ID }}
          ADOBE_CLIENT_SECRET: ${{ secrets.ADOBE_CLIENT_SECRET }}
        run: |
          response=$(curl -X POST \
          -u "${ADOBE_CLIENT_ID}:${ADOBE_CLIENT_SECRET}" \
          -H 'Content-Type: application/json' \
          -d '{ "grant_type" : "session" }' \
          ${BASE_URL}/rest/v1/app/session/token)

          SESSION_TOKEN=$(echo $response | jq -r '.ust')
          echo "SESSION_TOKEN=$SESSION_TOKEN" >> $GITHUB_OUTPUT
          
          echo "Session Token Response: $response"

      - name: Upload zip to adobe and get upload id
        id: upload_and_fetch
        env:
          SESSION_TOKEN: ${{ steps.get_session_token.outputs.SESSION_TOKEN }}
          BASE_URL: ${{ secrets.ADOBE_EQP_API_URL }}
        run: |
          # Upload the file
          upload_response=$(curl -X POST \
            -H "Authorization: Bearer $SESSION_TOKEN" \
             -H 'Content-Type: multipart/form-data; boundary=UNIQUE_BOUNDARY_TOKEN' \
             --data-binary @file-payload \
            "${BASE_URL}/rest/v1/files/uploads")
      
          # Check if the upload was successful
          if echo "$upload_response" | grep -q 'error'; then
            echo "Upload failed: $upload_response"
            exit 1
          else
            echo "Upload successful: $upload_response"
          fi
      
          # Extract upload ID from response (assuming JSON response)
          upload_id=$(echo $upload_response | jq -r '.[0].file_upload_id')

          echo "Upload ID: $upload_id"
          echo "FILE_UPLOAD_ID=$upload_id" >> $GITHUB_OUTPUT
          
      - name: Submit package
        id: submit_package
        env:
          SESSION_TOKEN: ${{ steps.get_session_token.outputs.SESSION_TOKEN }}
          BASE_URL: ${{ secrets.ADOBE_EQP_API_URL }}
          FILE_UPLOAD_ID: ${{ steps.upload_and_fetch.outputs.FILE_UPLOAD_ID }}
        run: |          
          # Submit the package
          submission_response=$(curl -v -X POST \
          -H "Authorization: Bearer $SESSION_TOKEN" \
          -H "Content-Type: application/json" \
          -d '[{
            "action": {
              "technical": "submit",
              "marketing": "submit"
            },
            "type": "extension",
            "platform": "M2",
            "version_compatibility": [
              {
                "edition": "CE",
                "versions": ["2.4"]
              },
              {
                "edition": "EE",
                "versions": ["2.4"]
              },
              {
                "edition": "ECE",
                "versions": ["2.4"]
              }
            ],
            "name": "Magento Automation Test ",
            "short_description": "A brief description of your extension",
            "long_description": "Your long description here",
            "release_notes": "<!-- Release notes generated using configuration in .github/release.yml at main -->
  
              ## What's Changed
              ### Other Changes üñáÔ∏è
              * PR Patch Test 12 by @SushmitaThakur in https://github.com/SushmitaThakur/adyen-magento2-forked/pull/35
              * PR 15 Update README.md by @SushmitaThakur in https://github.com/SushmitaThakur/adyen-magento2-forked/pull/37
              * Release v10.1.0 by @github-actions in https://github.com/SushmitaThakur/adyen-magento2-forked/pull/36
  
  
              **Full Changelog**: https://github.com/SushmitaThakur/adyen-magento2-forked/compare/v10.0.3...v10.1.0",
            "version": "1.2.0",
            "artifact": {
              "file_upload_id": "'$FILE_UPLOAD_ID'"
            },
            "documentation_artifacts": {
              "user": {
                "file_upload_id": "'$FILE_UPLOAD_ID'"
              }
            },
            "categories": [
              "//Extensions//Your Category"
            ],
            "license_type": "apache",
            "sku": "adyen/dummy-module"
          }]' \
          "${BASE_URL}/rest/v1/products/packages")
          
          echo "Submission Response:"
          echo "$submission_response"
          
